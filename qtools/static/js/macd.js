// Generated by CoffeeScript 1.7.1
(function() {
  var chart, chart_ctx, chartline, ctx, d, delta, i, macd, macd_point, macd_sgpt, offset, point_height, point_width, root, rsi, rsi_ctx, rsi_point, vctx, vol, x, x_step, y, _i, _j, _k, _l, _len, _len1, _len2, _len3, _len4, _m;

  root = typeof exports !== "undefined" && exports !== null ? exports : this;


  /*
  draw main stock chart
   */

  chart = document.getElementById('chart');

  chart_ctx = chart.getContext('2d');

  chart_ctx.translate(0.5, 0.5);

  point_width = 5;

  x_step = 10;

  chartline = data.length * x_step;

  x = 0;

  chart_ctx.beginPath();

  chart_ctx.moveTo(0, 100);

  chart_ctx.lineTo(chartline, 100);

  chart_ctx.moveTo(0, 200);

  chart_ctx.lineTo(chartline, 200);

  chart_ctx.moveTo(0, 300);

  chart_ctx.lineTo(chartline, 300);


  /*
  assume range of 0 to 80
   */

  for (i = _i = 0, _len = data.length; _i < _len; i = ++_i) {
    d = data[i];
    delta = Math.round(Math.abs(d.close - d.open) * 8);
    x = i * x_step;
    if (d.close > d.open) {
      y = 600 - d.close * 8;
      chart_ctx.fillStyle = "#00CC33";
      chart_ctx.fillRect(x, y, point_width, delta);
    } else {
      chart_ctx.fillStyle = "#CC0000";
      y = 600 - d.open * 8;
      chart_ctx.fillRect(x, y, point_width, delta);
    }

    /* draw high line */
    chart_ctx.moveTo(x + 3, y);
    chart_ctx.lineTo(x + 3, 600 - d.high * 8);

    /* draw low line */
    chart_ctx.moveTo(x + 3, y + delta);
    chart_ctx.lineTo(x + 3, 600 - d.low * 8);
  }

  chart_ctx.stroke();


  /*
  vol
   */

  vol = document.getElementById('vol');

  vctx = vol.getContext('2d');

  vctx.translate(0.5, 0.5);

  point_width = 5;

  offset = 10;

  x = 0;


  /* draw center line */

  vctx.beginPath();

  vctx.moveTo(0, 75);

  vctx.lineTo(chartline, 75);

  for (i = _j = 0, _len1 = data.length; _j < _len1; i = ++_j) {
    d = data[i];

    /* 
    	scale volume to fit 150px height box 
    	assume max of 150,000,000 for twitter
     */
    delta = d.volume / 1000000;
    vctx.fillStyle = "#888888 ";
    vctx.fillRect(x + i * x_step, 150 - delta, point_width, delta);
  }

  vctx.stroke();


  /*
  vma
   */

  root.showVma = function() {
    var vma_point, _k, _len2;
    vol = document.getElementById('vol');
    vctx = vol.getContext('2d');
    vctx.translate(0.5, 0.5);
    for (i = _k = 0, _len2 = vma_data.length; _k < _len2; i = ++_k) {
      vma_point = vma_data[i];
      vctx.rect(x + (i + offset) * x_step, vma_point * 10 + 75, point_width, point_height);
    }
    return vctx.stroke();
  };


  /*
  macd
   */

  macd = document.getElementById('macd');

  ctx = macd.getContext('2d');

  ctx.translate(0.5, 0.5);

  point_width = 2;

  point_height = 2;

  offset = 26;

  x = 0;


  /* draw center line */

  ctx.beginPath();

  ctx.moveTo(0, 75);

  ctx.lineTo(chartline, 75);

  for (i = _k = 0, _len2 = macd_line.length; _k < _len2; i = ++_k) {
    macd_point = macd_line[i];
    ctx.rect(x + (i + offset) * x_step, macd_point * 10 + 75, point_width, point_height);
  }

  ctx.fillStyle = "#CC0000";

  for (i = _l = 0, _len3 = macd_signal.length; _l < _len3; i = ++_l) {
    macd_sgpt = macd_signal[i];
    ctx.fillRect(x + (i + offset) * x_step, macd_sgpt * 10 + 75, point_width, point_height);
  }

  ctx.stroke();


  /*
  RSI
   */

  rsi = document.getElementById('rsi');

  rsi_ctx = rsi.getContext('2d');

  rsi_ctx.translate(0.5, 0.5);

  point_width = 2;

  point_height = 2;

  offset = 10;

  x = 0;


  /* draw center line */

  rsi_ctx.beginPath();

  rsi_ctx.moveTo(0, 75);

  rsi_ctx.lineTo(chartline, 75);

  for (i = _m = 0, _len4 = rsi_data.length; _m < _len4; i = ++_m) {
    rsi_point = rsi_data[i];
    rsi_ctx.rect(x + (i + offset) * x_step, rsi_point, point_width, point_height);
  }

  rsi_ctx.stroke();

}).call(this);
